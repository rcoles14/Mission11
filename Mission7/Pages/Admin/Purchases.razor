@page "/admin/purchases"

@inherits OwningComponentBase<iCheckoutRepository>

<PurchaseTable TableTitle="Not Shipped" Purchases="NotShipped" ButtonLabel="Shipped" PurchaseSelected="ShipBook"></PurchaseTable>
<PurchaseTable TableTitle="Shipped" Purchases="Shipped" ButtonLabel="Reset" PurchaseSelected="ResetPurchase"></PurchaseTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>

@code {
    public iCheckoutRepository repo => Service;

    public IEnumerable<Checkout> AllPurchases { get; set; }
    public IEnumerable<Checkout> NotShipped { get; set; }
    public IEnumerable<Checkout> Shipped { get; set; }


    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllPurchases = await repo.Checkouts.ToListAsync();
        NotShipped = AllPurchases.Where(x => !x.Shipped);
        Shipped = AllPurchases.Where(x => x.Shipped);
    }

    public void ShipBook(int id) => UpdatePurchase(id, true);
    public void ResetPurchase(int id) => UpdatePurchase(id, false);


    private void UpdatePurchase(int id, bool shipped)
    {
        Checkout c = repo.Checkouts.FirstOrDefault(x => x.CheckoutId == id);
        c.Shipped = shipped;
        repo.SaveCheckout(c);
    }
}
